name: Deploy (Staging/Prod by branch)

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select project by branch
        id: select
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if [ "$BRANCH" = "main" ]; then
            echo "project=reflat" >> $GITHUB_OUTPUT
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "project=reflat-staging" >> $GITHUB_OUTPUT
            echo "env=staging" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm
          cache-dependency-path: | 
            reflat/frontend/reflat-ui/package-lock.json
            reflat/backend/firebasefunctions/package-lock.json
          # node-version: 18
          # cache: npm

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Build frontend
        working-directory: reflat/frontend/reflat-ui
        run: |
          npm ci
          npm run build

      - name: Build functions
        working-directory: reflat/backend/firebasefunctions
        run: |
          npm ci
          npm run build

      - name: Deploy Hosting
        run: |
          if [ -z "$FIREBASE_TOKEN" ]; then
            echo "FIREBASE_TOKEN is not set" >&2; exit 1; fi
          firebase deploy --only hosting --project "${{ steps.select.outputs.project }}" --non-interactive --token "$FIREBASE_TOKEN"

      - name: Deploy Functions
        run: |
          if [ -z "$FIREBASE_TOKEN" ]; then
            echo "FIREBASE_TOKEN is not set" >&2; exit 1; fi
          firebase deploy --only functions --project "${{ steps.select.outputs.project }}" --non-interactive --token "$FIREBASE_TOKEN"

